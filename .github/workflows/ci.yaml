name: "CI"

on:
  push:
    branches:
      - development
      - main

jobs:
  codeql-analysis-call:
    uses: actions/reusable-workflows/.github/workflows/codeql-analysis.yml@main
     
  build:
    name: Build and Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3.5.2

      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.*

      - name: Run tests
        id: run-tests
        continue-on-error: true 
        run: |
          cd tests
          dotnet restore
          dotnet test -v q --nologo
      
      - name: Get approvers
        id: check-test-state
        if: steps.run-tests.outcome == 'failure'
        # set error state in job and trigger 
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: Astridstar
          minimum-approvals: 1
          issue-title: "Deploying v1.3.5 to prod from staging"
          issue-body: "There are errors in the unit test.  Do you want to continue with the deployment? Please approve or deny the deployment of version v1.3.5."
          exclude-workflow-initiator-as-approver: false
          additional-approved-words: 'yes'
          additional-denied-words: 'no'        
    
  release:
    name: Create release 
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == 'main' }}
    steps:
      - uses: actions/checkout@v3.5.2
      - name: Get release version
        id: get-release-version
        run: |
          cd ${{ github.workspace }}
          ls -la
          echo "version=$(jq -r .next_version ./versioning.json)" >> $GITHUB_OUTPUT 
          jq -r .next_version ./versioning.json

      - name: gh create release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo ${{ steps.get-release-version.outputs.version }}
          gh release create ${{ steps.get-release-version.outputs.version }} --generate-notes
